<?php
include 'db_config.php'; // Include database configuration

// Fetch user input from AJAX request
$userInput = isset($_POST['user_input']) ? $_POST['user_input'] : "";

// Default bot response
$defaultBotResponse = "I'm sorry, I don't understand.";

// Prepare SQL statement to fetch bot response based on user input
$query = "SELECT bot_response FROM chat_history WHERE user_message = ?";
$stmt = $conn->prepare($query);

// Bind parameter to the SQL statement
$stmt->bind_param("s", $userInput);

// Execute the prepared statement
$stmt->execute();

// Bind result variables
$stmt->bind_result($botResponse);

// Fetch the result
if ($stmt->fetch()) {
    echo $botResponse; // Echo fetched bot response for AJAX response
} else {
    // Find a similar word from the database
    $similarQuery = "SELECT user_message FROM chat_history";
    $result = $conn->query($similarQuery);
    $closestMatch = "";

    if ($result->num_rows > 0) {
        $maxSimilarity = 0;

        while ($row = $result->fetch_assoc()) {
            similar_text($userInput, $row['user_message'], $percent);
            if ($percent > $maxSimilarity && $percent < 80) { // Adjust the percentage threshold as needed
                $maxSimilarity = $percent;
                $closestMatch = $row['user_message'];
            }
        }
    }

    if (!empty($closestMatch)) {
        echo "Did you mean " . $closestMatch . "?";
    } else {
        echo $defaultBotResponse; // Echo default bot response if no match found
    }
}

// Close the prepared statement and database connection
$stmt->close();
$conn->close();
?>

dibawah 80%
---
<?php
include 'db_config.php'; // Include database configuration

// Fetch user input from AJAX request
$userInput = isset($_POST['user_input']) ? $_POST['user_input'] : "";

// Default bot response
$defaultBotResponse = "I'm sorry, I don't understand.";

// Prepare SQL statement to fetch bot response based on user input
$query = "SELECT bot_response FROM chat_history WHERE user_message = ?";
$stmt = $conn->prepare($query);

// Bind parameter to the SQL statement
$stmt->bind_param("s", $userInput);

// Execute the prepared statement
$stmt->execute();

// Bind result variables
$stmt->bind_result($botResponse);

// Fetch the result
if ($stmt->fetch()) {
    echo $botResponse; // Echo fetched bot response for AJAX response
} else {
    // Find a similar word from the database
    $similarQuery = "SELECT user_message FROM chat_history";
    $result = $conn->query($similarQuery);
    $closestMatch = "";

    if ($result->num_rows > 0) {
        $minDistance = PHP_INT_MAX;

        while ($row = $result->fetch_assoc()) {
            similar_text($userInput, $row['user_message'], $percent);
            if ($percent > 80 && $percent < 100) { // Adjust the percentage threshold as needed
                $closestMatch = $row['user_message'];
                break;
            }
        }
    }

    if (!empty($closestMatch)) {
        echo "Did you mean " . $closestMatch . "?";
    } else {
        echo $defaultBotResponse; // Echo default bot response if no match found
    }
}

// Close the prepared statement and database connection
$stmt->close();
$conn->close();
?>

80%-100%